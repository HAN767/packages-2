From bfa777137ac1a41175f2b2c0487392ddcf4e47e2 Mon Sep 17 00:00:00 2001
From: W_Y_CPP <383152993@qq.com>
Date: Sat, 4 Dec 2021 18:14:24 +0900
Subject: [PATCH] fix build musl 1.2.x

---
 contrib/trytime/trytime.c |  8 ++++----
 src/rrd_dump.c            |  2 +-
 src/rrd_graph.c           |  2 +-
 src/rrd_tool.c            | 16 ++++++++--------
 4 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/contrib/trytime/trytime.c b/contrib/trytime/trytime.c
index 71669e7b..4bbc1af0 100644
--- a/contrib/trytime/trytime.c
+++ b/contrib/trytime/trytime.c
@@ -83,21 +83,21 @@ int main ( int ac, char **av )
   strftime(tim_b,100,"%c %Z",localtime(&start_tmp));
   if( *soption )
       printf( "Start time was specified as: '%s',\n"
-	      "for me this means: %s (or %ld sec since epoch)\n\n", 
+	      "for me this means: %s (or %lld sec since epoch)\n\n", 
               soption, tim_b, start_tmp );
     else
       printf( "Start time was not specified, default value will be used (end-24h)\n"
-	      "for me this means: %s (or %ld sec since epoch)\n\n",
+	      "for me this means: %s (or %lld sec since epoch)\n\n",
 	      tim_b, start_tmp );
     
   strftime(tim_b,100,"%c %Z",localtime(&end_tmp));
   if( *eoption )
       printf( "End time was specified as: '%s',\n"
-	      "for me this means: %s (or %ld sec since epoch)\n", 
+	      "for me this means: %s (or %lld sec since epoch)\n", 
               eoption, tim_b, end_tmp );
   else
       printf( "End time was not specified, default value will be used (now)\n"
-	      "for me this means: %s (or %ld sec since epoch)\n\n",
+	      "for me this means: %s (or %lld sec since epoch)\n\n",
 	      tim_b, end_tmp );
   exit(0);
 }
diff --git a/src/rrd_dump.c b/src/rrd_dump.c
index 945d11f4..05d5aa76 100644
--- a/src/rrd_dump.c
+++ b/src/rrd_dump.c
@@ -39,7 +39,7 @@ rrd_dump(int argc, char **argv)
 #else
 # error "Need strftime"
 #endif
-    printf("\t<lastupdate> %ld </lastupdate> <!-- %s -->\n\n",
+    printf("\t<lastupdate> %lld </lastupdate> <!-- %s -->\n\n",
 	   rrd.live_head->last_up,somestring);
     for(i=0;i<rrd.stat_head->ds_cnt;i++){
 	printf("\t<ds>\n");
diff --git a/src/rrd_graph.c b/src/rrd_graph.c
index 07bc68d4..196546a3 100644
--- a/src/rrd_graph.c
+++ b/src/rrd_graph.c
@@ -3293,7 +3293,7 @@ im.unit = 0; /* do not display unit if not set */
 	case GF_VRULE:
 	    if(sscanf(
 		&argv[i][argstart],
-		"%lu#%2x%2x%2x:%n",
+		"%llu#%2x%2x%2x:%n",
 		&im.gdes[im.gdes_c-1].xrule,
 		&col_red,
 		&col_green,
diff --git a/src/rrd_tool.c b/src/rrd_tool.c
index 9f2e375a..6fe147bc 100644
--- a/src/rrd_tool.c
+++ b/src/rrd_tool.c
@@ -340,9 +340,9 @@ int HandleInputLine(int argc, char **argv, FILE* out)
     else if (strcmp("resize", argv[1]) == 0)
 	rrd_resize(argc-1, &argv[1]);
     else if (strcmp("last", argv[1]) == 0)
-        printf("%ld\n",rrd_last(argc-1, &argv[1]));
+        printf("%lld\n",rrd_last(argc-1, &argv[1]));
     else if (strcmp("first", argv[1]) == 0)
-        printf("%ld\n",rrd_first(argc-1, &argv[1]));
+        printf("%lld\n",rrd_first(argc-1, &argv[1]));
     else if (strcmp("update", argv[1]) == 0)
 	rrd_update(argc-1, &argv[1]);
     else if (strcmp("fetch", argv[1]) == 0) {
@@ -380,11 +380,11 @@ int HandleInputLine(int argc, char **argv, FILE* out)
 	  printf("<?xml version=\"1.0\" encoding=\"%s\"?>\n\n", XML_ENCODING);
 	  printf("<%s>\n", ROOT_TAG);
 	  printf("  <%s>\n", META_TAG);
-	  printf("    <%s>%lu</%s>\n", META_START_TAG, start, META_START_TAG);
-	  printf("    <%s>%lu</%s>\n", META_STEP_TAG, step, META_STEP_TAG);
-	  printf("    <%s>%lu</%s>\n", META_END_TAG, end, META_END_TAG);
-	  printf("    <%s>%lu</%s>\n", META_ROWS_TAG, row_cnt, META_ROWS_TAG);
-	  printf("    <%s>%lu</%s>\n", META_COLS_TAG, col_cnt, META_COLS_TAG);
+	  printf("    <%s>%llu</%s>\n", META_START_TAG, start, META_START_TAG);
+	  printf("    <%s>%llu</%s>\n", META_STEP_TAG, step, META_STEP_TAG);
+	  printf("    <%s>%llu</%s>\n", META_END_TAG, end, META_END_TAG);
+	  printf("    <%s>%llu</%s>\n", META_ROWS_TAG, row_cnt, META_ROWS_TAG);
+	  printf("    <%s>%llu</%s>\n", META_COLS_TAG, col_cnt, META_COLS_TAG);
 	  printf("    <%s>\n", LEGEND_TAG);
 	  for (j = 0; j < col_cnt; j++) {
 	    char *entry = NULL;
@@ -398,7 +398,7 @@ int HandleInputLine(int argc, char **argv, FILE* out)
 	  printf("  <%s>\n", DATA_TAG);
 	  for (i = start; i <= end; i += step) {
 	    printf ("    <%s>", DATA_ROW_TAG);
-	    printf ("<%s>%lu</%s>", COL_TIME_TAG, i, COL_TIME_TAG);
+	    printf ("<%s>%llu</%s>", COL_TIME_TAG, i, COL_TIME_TAG);
 	    for (j = 0; j < col_cnt; j++) {
 	      rrd_value_t newval = DNAN;
 	      newval = *(ptr++);
-- 
2.17.1

