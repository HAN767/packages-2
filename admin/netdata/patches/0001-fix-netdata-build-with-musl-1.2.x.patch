From 7f98c5f01aec6ee06dcd212b0afc9c809089ee97 Mon Sep 17 00:00:00 2001
From: W_Y_CPP <383152993@qq.com>
Date: Sat, 4 Dec 2021 17:44:00 +0900
Subject: [PATCH] fix netdata  build with musl 1.2.x

---
 collectors/proc.plugin/sys_class_infiniband.c |  2 +-
 daemon/unit_test.c                            |  4 ++--
 database/rrdset.c                             |  2 +-
 health/health.c                               |  6 +++---
 health/health_log.c                           |  2 +-
 libnetdata/log/log.c                          | 16 ++++++++--------
 streaming/receiver.c                          |  8 ++++----
 streaming/rrdpush.c                           |  6 +++---
 streaming/sender.c                            |  2 +-
 web/api/exporters/shell/allmetrics_shell.c    |  2 +-
 web/api/formatters/rrdset2json.c              |  6 +++---
 web/api/web_api_v1.c                          |  2 +-
 12 files changed, 29 insertions(+), 29 deletions(-)

diff --git a/collectors/proc.plugin/sys_class_infiniband.c b/collectors/proc.plugin/sys_class_infiniband.c
index 69e27f8..1f658a9 100644
--- a/collectors/proc.plugin/sys_class_infiniband.c
+++ b/collectors/proc.plugin/sys_class_infiniband.c
@@ -481,7 +481,7 @@ int do_sys_class_infiniband(int update_every, usec_t dt)
 
                 if (!p->discovered)
                     info(
-                        "Infiniband card %s port %s at speed %lu width %lu", dev_dent->d_name, port_dent->d_name,
+                        "Infiniband card %s port %s at speed %llu width %llu", dev_dent->d_name, port_dent->d_name,
                         p->speed, p->width);
 
                 p->discovered = 1;
diff --git a/daemon/unit_test.c b/daemon/unit_test.c
index 8109073..bfa2285 100644
--- a/daemon/unit_test.c
+++ b/daemon/unit_test.c
@@ -1194,7 +1194,7 @@ int run_test(struct test *test)
         calculated_number v = unpack_storage_number(rd->values[c]);
         calculated_number n = unpack_storage_number(pack_storage_number(test->results[c], SN_EXISTS));
         int same = (calculated_number_round(v * 10000000.0) == calculated_number_round(n * 10000000.0))?1:0;
-        fprintf(stderr, "    %s/%s: checking position %lu (at %lu secs), expecting value " CALCULATED_NUMBER_FORMAT ", found " CALCULATED_NUMBER_FORMAT ", %s\n",
+        fprintf(stderr, "    %s/%s: checking position %lu (at %lld secs), expecting value " CALCULATED_NUMBER_FORMAT ", found " CALCULATED_NUMBER_FORMAT ", %s\n",
             test->name, rd->name, c+1,
             (rrdset_first_entry_t(st) + c * st->update_every) - time_start,
             n, v, (same)?"OK":"### E R R O R ###");
@@ -1205,7 +1205,7 @@ int run_test(struct test *test)
             v = unpack_storage_number(rd2->values[c]);
             n = test->results2[c];
             same = (calculated_number_round(v * 10000000.0) == calculated_number_round(n * 10000000.0))?1:0;
-            fprintf(stderr, "    %s/%s: checking position %lu (at %lu secs), expecting value " CALCULATED_NUMBER_FORMAT ", found " CALCULATED_NUMBER_FORMAT ", %s\n",
+            fprintf(stderr, "    %s/%s: checking position %lu (at %lld secs), expecting value " CALCULATED_NUMBER_FORMAT ", found " CALCULATED_NUMBER_FORMAT ", %s\n",
                 test->name, rd2->name, c+1,
                 (rrdset_first_entry_t(st) + c * st->update_every) - time_start,
                 n, v, (same)?"OK":"### E R R O R ###");
diff --git a/database/rrdset.c b/database/rrdset.c
index fd6605d..c0aac9e 100644
--- a/database/rrdset.c
+++ b/database/rrdset.c
@@ -1441,7 +1441,7 @@ void rrdset_done(RRDSET *st) {
     // check if we will re-write the entire data set
     if(unlikely(dt_usec(&st->last_collected_time, &st->last_updated) > st->entries * update_every_ut &&
                 st->rrd_memory_mode != RRD_MEMORY_MODE_DBENGINE)) {
-        info("%s: too old data (last updated at %ld.%ld, last collected at %ld.%ld). Resetting it. Will not store the next entry.", st->name, st->last_updated.tv_sec, st->last_updated.tv_usec, st->last_collected_time.tv_sec, st->last_collected_time.tv_usec);
+        info("%s: too old data (last updated at %lld.%lld, last collected at %lld.%lld). Resetting it. Will not store the next entry.", st->name, st->last_updated.tv_sec, st->last_updated.tv_usec, st->last_collected_time.tv_sec, st->last_collected_time.tv_usec);
         rrdset_reset(st);
         rrdset_init_last_updated_time(st);
 
diff --git a/health/health.c b/health/health.c
index 85d2a24..52b06e0 100644
--- a/health/health.c
+++ b/health/health.c
@@ -101,7 +101,7 @@ static void health_silencers_init(void) {
                 freez(str);
             }
         } else {
-            error("Health silencers file %s has the size %ld that is out of range[ 1 , %d ]. Aborting read.", silencers_filename, length, HEALTH_SILENCERS_MAX_FILE_LEN);
+            error("Health silencers file %s has the size %lld that is out of range[ 1 , %d ]. Aborting read.", silencers_filename, length, HEALTH_SILENCERS_MAX_FILE_LEN);
         }
         fclose(fd);
     } else {
@@ -652,7 +652,7 @@ void *health_main(void *ptr) {
         if (unlikely(check_if_resumed_from_suspension())) {
             apply_hibernation_delay = 1;
 
-            info("Postponing alarm checks for %ld seconds, because it seems that the system was just resumed from suspension.",
+            info("Postponing alarm checks for %lld seconds, because it seems that the system was just resumed from suspension.",
                  hibernation_delay
             );
         }
@@ -675,7 +675,7 @@ void *health_main(void *ptr) {
 
             if (unlikely(apply_hibernation_delay)) {
 
-                info("Postponing health checks for %ld seconds, on host '%s'.", hibernation_delay, host->hostname
+                info("Postponing health checks for %lld seconds, on host '%s'.", hibernation_delay, host->hostname
                 );
 
                 host->health_delay_up_to = now + hibernation_delay;
diff --git a/health/health_log.c b/health/health_log.c
index de0a088..3fa8863 100644
--- a/health/health_log.c
+++ b/health/health_log.c
@@ -110,7 +110,7 @@ inline void health_alarm_log_save(RRDHOST *host, ALARM_ENTRY *ae) {
                         "\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s"
                         "\t%d\t%d\t%d\t%d"
                         "\t" CALCULATED_NUMBER_FORMAT_AUTO "\t" CALCULATED_NUMBER_FORMAT_AUTO
-                        "\t%016lx"
+                        "\t%016llx"
                         "\t%s\t%s\t%s"
                         "\n"
                             , (ae->flags & HEALTH_ENTRY_FLAG_SAVED)?'U':'A'
diff --git a/libnetdata/log/log.c b/libnetdata/log/log.c
index 95d3d98..a039e6a 100644
--- a/libnetdata/log/log.c
+++ b/libnetdata/log/log.c
@@ -607,12 +607,12 @@ int error_log_limit(int reset) {
         if(prevented) {
             char date[LOG_DATE_LENGTH];
             log_date(date, LOG_DATE_LENGTH);
-            fprintf(stderr, "%s: %s LOG FLOOD PROTECTION reset for process '%s' (prevented %lu logs in the last %ld seconds).\n"
+            fprintf(stderr, "%s: %s LOG FLOOD PROTECTION reset for process '%s' (prevented %lu logs in the last %lld seconds).\n"
                     , date
                     , program_name
                     , program_name
                     , prevented
-                    , now - start
+                    , (long long)(now - start)
             );
         }
 
@@ -628,12 +628,12 @@ int error_log_limit(int reset) {
         if(prevented) {
             char date[LOG_DATE_LENGTH];
             log_date(date, LOG_DATE_LENGTH);
-            fprintf(stderr, "%s: %s LOG FLOOD PROTECTION resuming logging from process '%s' (prevented %lu logs in the last %ld seconds).\n"
+            fprintf(stderr, "%s: %s LOG FLOOD PROTECTION resuming logging from process '%s' (prevented %lu logs in the last %lld seconds).\n"
                     , date
                     , program_name
                     , program_name
                     , prevented
-                    , error_log_throttle_period
+                    , (long long)error_log_throttle_period
             );
         }
 
@@ -650,15 +650,15 @@ int error_log_limit(int reset) {
         if(!prevented) {
             char date[LOG_DATE_LENGTH];
             log_date(date, LOG_DATE_LENGTH);
-            fprintf(stderr, "%s: %s LOG FLOOD PROTECTION too many logs (%lu logs in %ld seconds, threshold is set to %lu logs in %ld seconds). Preventing more logs from process '%s' for %ld seconds.\n"
+            fprintf(stderr, "%s: %s LOG FLOOD PROTECTION too many logs (%lu logs in %lld seconds, threshold is set to %lu logs in %lld seconds). Preventing more logs from process '%s' for %lld seconds.\n"
                     , date
                     , program_name
                     , counter
-                    , now - start
+                    , (long long)(now - start)
                     , error_log_errors_per_period
-                    , error_log_throttle_period
+                    , (long long)error_log_throttle_period
                     , program_name
-                    , start + error_log_throttle_period - now);
+                    , (long long)(start + error_log_throttle_period - now));
         }
 
         prevented++;
diff --git a/streaming/receiver.c b/streaming/receiver.c
index 11191f3..5f71b72 100644
--- a/streaming/receiver.c
+++ b/streaming/receiver.c
@@ -68,15 +68,15 @@ PARSER_RC streaming_timestamp(char **words, void *user, PLUGINSD_ACTION *plugins
         time_t now = now_realtime_sec(), prev = rrdhost_last_entry_t(host);
         time_t gap = 0;
         if (prev == 0)
-            info("STREAM %s from %s: Initial connection (no gap to check), remote=%ld local=%ld slew=%ld",
+            info("STREAM %s from %s: Initial connection (no gap to check), remote=%lld local=%lld slew=%lld",
                  host->hostname, cd->cmd, remote_time, now, now-remote_time);
         else {
             gap = now - prev;
-            info("STREAM %s from %s: Checking for gaps... remote=%ld local=%ld..%ld slew=%ld  %ld-sec gap",
+            info("STREAM %s from %s: Checking for gaps... remote=%lld local=%lld..%lld slew=%lld  %lld-sec gap",
                  host->hostname, cd->cmd, remote_time, prev, now, remote_time - now, gap);
         }
         char message[128];
-        sprintf(message,"REPLICATE %ld %ld\n", remote_time - gap, remote_time);
+        sprintf(message,"REPLICATE %lld %lld\n", remote_time - gap, remote_time);
         int ret;
 #ifdef ENABLE_HTTPS
         SSL *conn = host->stream_ssl.conn ;
@@ -437,7 +437,7 @@ static int rrdpush_receive(struct receiver_state *rpt)
     if(health_enabled != CONFIG_BOOLEAN_NO) {
         if(alarms_delay > 0) {
             rpt->host->health_delay_up_to = now_realtime_sec() + alarms_delay;
-            info("Postponing health checks for %ld seconds, on host '%s', because it was just connected."
+            info("Postponing health checks for %lld seconds, on host '%s', because it was just connected."
             , alarms_delay
             , rpt->host->hostname
             );
diff --git a/streaming/rrdpush.c b/streaming/rrdpush.c
index f54fc60..f3a9533 100644
--- a/streaming/rrdpush.c
+++ b/streaming/rrdpush.c
@@ -265,7 +265,7 @@ static inline void rrdpush_send_chart_metrics_nolock(RRDSET *st, struct sender_s
     RRDHOST *host = st->rrdhost;
     buffer_sprintf(host->sender->build, "BEGIN \"%s\" %llu", st->id, (st->last_collected_time.tv_sec > st->upstream_resync_time)?st->usec_since_last_update:0);
     if (s->version >= VERSION_GAP_FILLING)
-        buffer_sprintf(host->sender->build, " %ld\n", st->last_collected_time.tv_sec);
+        buffer_sprintf(host->sender->build, " %lld\n", st->last_collected_time.tv_sec);
     else
         buffer_strcat(host->sender->build, "\n");
 
@@ -648,7 +648,7 @@ int rrdpush_receiver_thread_spawn(struct web_client *w, char *url) {
                 host->receiver->shutdown = 1;
                 shutdown(host->receiver->fd, SHUT_RDWR);
                 host->receiver = NULL;      // Thread holds reference to structure
-                info("STREAM %s [receive from [%s]:%s]: multiple connections for same host detected - existing connection is dead (%ld sec), accepting new connection.", host->hostname, w->client_ip, w->client_port, age);
+                info("STREAM %s [receive from [%s]:%s]: multiple connections for same host detected - existing connection is dead (%lld sec), accepting new connection.", host->hostname, w->client_ip, w->client_port, age);
             }
             else {
                 netdata_mutex_unlock(&host->receiver_lock);
@@ -656,7 +656,7 @@ int rrdpush_receiver_thread_spawn(struct web_client *w, char *url) {
                 rrd_unlock();
                 log_stream_connection(w->client_ip, w->client_port, key, host->machine_guid, host->hostname,
                                       "REJECTED - ALREADY CONNECTED");
-                info("STREAM %s [receive from [%s]:%s]: multiple connections for same host detected - existing connection is active (within last %ld sec), rejecting new connection.", host->hostname, w->client_ip, w->client_port, age);
+                info("STREAM %s [receive from [%s]:%s]: multiple connections for same host detected - existing connection is active (within last %lld sec), rejecting new connection.", host->hostname, w->client_ip, w->client_port, age);
                 // Have not set WEB_CLIENT_FLAG_DONT_CLOSE_SOCKET - caller should clean up
                 buffer_flush(w->response.data);
                 buffer_strcat(w->response.data, "This GUID is already streaming to this server");
diff --git a/streaming/sender.c b/streaming/sender.c
index 1dee1f0..91d2c83 100644
--- a/streaming/sender.c
+++ b/streaming/sender.c
@@ -625,7 +625,7 @@ void *rrdpush_sender_thread(void *ptr) {
             if (s->version >= VERSION_GAP_FILLING) {
                 time_t now = now_realtime_sec();
                 sender_start(s);
-                buffer_sprintf(s->build, "TIMESTAMP %ld", now);
+                buffer_sprintf(s->build, "TIMESTAMP %lld", now);
                 sender_commit(s);
             }
             rrdpush_claimed_id(s->host);
diff --git a/web/api/exporters/shell/allmetrics_shell.c b/web/api/exporters/shell/allmetrics_shell.c
index 0b0ce22..6d02545 100644
--- a/web/api/exporters/shell/allmetrics_shell.c
+++ b/web/api/exporters/shell/allmetrics_shell.c
@@ -113,7 +113,7 @@ void rrd_stats_api_v1_charts_allmetrics_json(RRDHOST *host, BUFFER *wb) {
                                "\t\t\"family\":\"%s\",\n"
                                "\t\t\"context\":\"%s\",\n"
                                "\t\t\"units\":\"%s\",\n"
-                               "\t\t\"last_updated\": %ld,\n"
+                               "\t\t\"last_updated\": %lld,\n"
                                "\t\t\"dimensions\": {"
                            , chart_counter?",":""
                            , st->id
diff --git a/web/api/formatters/rrdset2json.c b/web/api/formatters/rrdset2json.c
index 5482881..ac761a7 100644
--- a/web/api/formatters/rrdset2json.c
+++ b/web/api/formatters/rrdset2json.c
@@ -72,18 +72,18 @@ void rrdset2json(RRDSET *st, BUFFER *wb, size_t *dimensions_count, size_t *memor
 
     if (likely(!skip_volatile))
         buffer_sprintf(wb,
-                "\t\t\t\"duration\": %ld,\n"
+                "\t\t\t\"duration\": %lld,\n"
             , last_entry_t - first_entry_t + st->update_every//st->entries * st->update_every
         );
 
     buffer_sprintf(wb,
-                "\t\t\t\"first_entry\": %ld,\n"
+                "\t\t\t\"first_entry\": %lld,\n"
         , first_entry_t //rrdset_first_entry_t(st)
     );
 
     if (likely(!skip_volatile))
         buffer_sprintf(wb,
-                "\t\t\t\"last_entry\": %ld,\n"
+                "\t\t\t\"last_entry\": %lld,\n"
             , last_entry_t//rrdset_last_entry_t(st)
         );
 
diff --git a/web/api/web_api_v1.c b/web/api/web_api_v1.c
index 96fcf48..d2d64ce 100644
--- a/web/api/web_api_v1.c
+++ b/web/api/web_api_v1.c
@@ -589,7 +589,7 @@ inline int web_client_api_request_v1_data(RRDHOST *host, struct web_client *w, c
         );
 
         buffer_sprintf(w->response.data,
-                "%s({version:'%s',reqId:'%s',status:'ok',sig:'%ld',table:",
+                "%s({version:'%s',reqId:'%s',status:'ok',sig:'%lld',table:",
                 responseHandler, google_version, google_reqId, st->last_updated.tv_sec);
     }
     else if(format == DATASOURCE_JSONP) {
-- 
2.17.1

