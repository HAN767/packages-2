--- a/nfnetlink.c	2021-09-27 01:05:37.670041725 -0700
+++ b/nfnetlink.c	2021-09-27 01:09:44.000000000 -0700
@@ -344,7 +344,7 @@
 	return NL_OK;
 }
 
-static void
+static int
 check_rmem_max(int bufsize)
 {
 	char buf[16];
@@ -366,6 +366,8 @@
 		        "by the kernel. The net.core.rmem_max sysctl limit needs to be raised to\n"
 		        "at least %d in order to sucessfully set the desired receive buffer size!\n",
 		        bufsize, max, bufsize);
+
+	return max;
 }
 
 
@@ -377,18 +379,21 @@
 	if (!nl)
 		return -ENOMEM;
 
-	if (nl_connect(nl, NETLINK_NETFILTER))
+	bufsize=check_rmem_max(bufsize);
+	if (nl_connect_ex(nl, NETLINK_NETFILTER,bufsize,0))
+	{
+		fprintf(stderr,"connect socket error,errorno:%d\n",-errno);
 		return -errno;
-
+	}
 	if (nl_socket_add_memberships(nl, NFNLGRP_CONNTRACK_NEW,
 	                                  NFNLGRP_CONNTRACK_DESTROY, 0))
 		return -errno;
 
-	check_rmem_max(bufsize);
-
 	if (nl_socket_set_buffer_size(nl, bufsize, 0))
+	{
+		fprintf(stderr,"set socket buffer error,size:%d-errorno:%d\n",bufsize,-errno);
 		return -errno;
-
+	}
 	ufd.cb = handle_event;
 	ufd.fd = nl_socket_get_fd(nl);
 
