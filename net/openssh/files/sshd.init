#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=50
STOP=50

USE_PROCD=1
PROG=/usr/sbin/sshd

hk_generate_as_needed() {
	for type in rsa ed25519
	do
		# check for keys
		key=/etc/ssh/ssh_host_${type}_key
		[ ! -f $key ] && {
			# generate missing keys
			[ -x /usr/bin/ssh-keygen ] && {
				/usr/bin/ssh-keygen -N '' -t $type -f $key 2>&- >&-
			}
		}
	done
}

ssh_instance()
{
	[ "$2" = 0 ] || {
		echo "validation failed"
		return 1
	}

	[ "${enable}" = "0" ] && return 1


	#local lport=$(awk '/^Port / { print $2; exit }' /etc/ssh/sshd_config)
	#[ -z "$lport" ] && lport=9527

	sed -i '/Port/d' /etc/ssh/sshd_config
	sed -i '$aPort '"$Port"'' /etc/ssh/sshd_config

	if [ "${RootPasswordAuth}" -eq 0 ]; then
		sed -i '/PermitRootLogin/d' /etc/ssh/sshd_config
	else
		sed -i '/PermitRootLogin/d' /etc/ssh/sshd_config
		sed -i '$aPermitRootLogin yes' /etc/ssh/sshd_config
	fi

	if [ "$PasswordAuth" -eq 0 ]; then
		sed -i '/PasswordAuthentication/d' /etc/ssh/sshd_config
	else
		sed -i '/PasswordAuthentication/d' /etc/ssh/sshd_config
		sed -i '$aPasswordAuthentication yes' /etc/ssh/sshd_config
	fi

	mkdir -m 0700 -p /var/empty
	procd_open_instance
	#procd_add_mdns "ssh" "tcp" "$lport"
	procd_set_param command $PROG -D 
	procd_close_instance
}

validate_section_ssh()
{
	uci_load_validate ssh ssh "$1" "$2" \
		'PasswordAuth:bool:1' \
		'enable:bool:1' \
		'RootPasswordAuth:bool:1' \
		'RootLogin:bool:1' \
		'Port:port:9527' 
}

start_service()
{
      	hk_generate_as_needed
	config_load ssh
    	config_foreach validate_section_ssh ssh ssh_instance
}

service_triggers()
{
	procd_add_config_trigger "config.change" "ssh" /etc/init.d/sshd reload
}

shutdown() {
	killall sshd
}
